AWSTemplateFormatVersion: 2010-09-09
Description: An example CloudFormation template for Fargate.
Parameters:
  EnvId:
    Type: String
    Description: Environment Id (used to namespace resources)
    AllowedPattern: "[a-z][a-z0-9]{2,19}"
    ConstraintDescription: Must be lower case letters between 3 and 20 characters.
  SystemId:
    Type: String
    Description: System Id (used to namespace resources)
    AllowedPattern: "[a-z][a-z0-9]{2,19}"
    ConstraintDescription: Must be lower case letters between 3 and 20 characters.
  VPC:
    Type: AWS::EC2::VPC::Id
  LoadBalancerPort:
    Type: Number
    Default: 443
  DefaultHTTPPort:
    Type: Number
    Default: 80 
  CertificateArn:
    Type: String
  SubnetA:
    Type: AWS::EC2::Subnet::Id
  SubnetB:
    Type: AWS::EC2::Subnet::Id

Resources:

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription:
        !Join ["", [!Ref SystemId, !Ref EnvId, EnvironmentLoadBalancerSecurityGroup]]
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref LoadBalancerPort
          ToPort: !Ref LoadBalancerPort
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: !Ref DefaultHTTPPort
          ToPort: !Ref DefaultHTTPPort
          CidrIp: 0.0.0.0/0
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: 60
      Name: !Join ["-", [!Ref SystemId, !Ref EnvId, EnvLoadBalancer]]
      # "internal" is also an option
      Scheme: internet-facing
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
      Subnets:
        - !Ref SubnetA
        - !Ref SubnetB

  ListenerHTTPS:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
          - Type: "fixed-response"
            FixedResponseConfig:
              ContentType: "text/plain"
              MessageBody: "Unknown Host"
              StatusCode: "503"
      LoadBalancerArn: !Ref LoadBalancer
      Port: !Ref LoadBalancerPort
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref Certificate

      LoadBalancerArn: !Ref LoadBalancer
      Port: !Ref LoadBalancerPort
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref CertificateArn



  ListenerHTTP:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - Type: "redirect"
          RedirectConfig:
            Protocol: "HTTPS"
            Port: 443
            StatusCode: "HTTP_301"
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: "HTTP"


Outputs:
  HttpsListener:
    Description: The HTTPS listener for the load balancer
    Value: !Ref ListenerHTTPS
  LoadBalancerArn:
    Value: !Ref LoadBalancer
  LoadBalancerCanonicalHostedZoneID:
    Value: !GetAtt LoadBalancer.CanonicalHostedZoneID
  LoadBalancerDNSName:
    Value: !GetAtt LoadBalancer.DNSName
  LoadBalancerSecurityGroupId:
    Value: !Ref LoadBalancerSecurityGroup